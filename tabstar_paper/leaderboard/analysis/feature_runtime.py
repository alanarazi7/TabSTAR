from tabstar.datasets.all_datasets import OpenMLDatasetID, KaggleDatasetID

UP_TO_10_FEAT = [
OpenMLDatasetID.BIN_ANONYM_XD6,
OpenMLDatasetID.REG_SCIENCE_SIMULATION_MV,
OpenMLDatasetID.BIN_HEALTHCARE_BLOOD_TRANSFUSION,
OpenMLDatasetID.MUL_SPORTS_POKER_HAND,
OpenMLDatasetID.REG_CONSUMER_BOOK_PRICE_PREDICTION,
KaggleDatasetID.MUL_SOCIAL_GOT_SCRIPTS,
OpenMLDatasetID.BIN_ANONYM_MONKS_PROBLEM_2,
OpenMLDatasetID.MUL_CONSUMER_PRODUCT_SENTIMENT,
OpenMLDatasetID.REG_SCIENCE_ENERGY_EFFICIENCY,
OpenMLDatasetID.BIN_ANONYM_MAMMOGRAPHY,
OpenMLDatasetID.MUL_TRANSPORTATION_CAR_ORIGIN_COUNTRY,
OpenMLDatasetID.REG_CONSUMER_ONLINE_NEWS_POPULARITY,
OpenMLDatasetID.REG_TRANSPORTATION_NYC_BIKE_TRIP_DURATION,
OpenMLDatasetID.REG_SCIENCE_SULFUR,
OpenMLDatasetID.MUL_COMPUTERS_PAGE_BLOCK_PARSING,
]

FROM_30_TO_50_FEAT = [
OpenMLDatasetID.BIN_FINANCIAL_BANK_ACCOUNT_FRAUD_BAF,
OpenMLDatasetID.BIN_TRANSPORTATION_CAR_BAD_BUY_KICK,
OpenMLDatasetID.REG_COMPUTERS_GAMING_FRAMES_FPS_BENCHMARK,
OpenMLDatasetID.MUL_SOCIAL_GOOGLE_QA_TYPE_REASON,
OpenMLDatasetID.REG_SPORTS_FIFA_PLAYERS_STATS,
OpenMLDatasetID.BIN_COMPUTERS_PC4_CODE_DEFECTIONS,
OpenMLDatasetID.BIN_HEALTHCARE_CELLS_WDBC_WISCONSIN_BREAST_CANCER,
OpenMLDatasetID.MUL_NATURE_SOYBEAN_DISEASE,
OpenMLDatasetID.REG_SPORTS_NBA_ALL_STAR,
OpenMLDatasetID.BIN_INDUSTRIAL_CYLINDER_BANDING_PRINTING,
OpenMLDatasetID.BIN_PROFESSIONAL_EMPLOYEE_IBM_ATTRITION,
OpenMLDatasetID.BIN_FINANCIAL_LT_VEHICLE_LOAN,
OpenMLDatasetID.BIN_COMPUTERS_PHISHING_WEBSITE_HUDDERSFIELD,
OpenMLDatasetID.MUL_SPORTS_CONNECT4_GAME,
OpenMLDatasetID.REG_SCIENCE_WAVE_ENERGY,
]

MORE_THAN_100_FEAT = [
OpenMLDatasetID.BIN_ANONYM_JASMINE,
OpenMLDatasetID.REG_ANONYM_ALLSTATE_CLAIM_SEVERITY,
OpenMLDatasetID.REG_SOCIAL_US_CRIME,
OpenMLDatasetID.BIN_ANONYM_APS_FAILURE,
OpenMLDatasetID.BIN_GEOGRAPHY_NOMAO_SEARCH_ENGINE,
OpenMLDatasetID.BIN_PROFESSIONAL_ACADEMIC_COLLEGE_SCORECARD,
OpenMLDatasetID.BIN_GENETICS_MUSK_MOLECULES,
OpenMLDatasetID.REG_COMPUTERS_ALGO_RUNTIME_SAT11,
OpenMLDatasetID.REG_ANONYM_YOLANDA,
OpenMLDatasetID.REG_ANONYM_FAT_MEAT_TECATOR,
OpenMLDatasetID.BIN_SOCIAL_SPEED_DATING,
OpenMLDatasetID.REG_COMPUTERS_ALGO_RUNTIME_MIP2016,
OpenMLDatasetID.BIN_SCIENCE_SIMULATION_HILL_VALLEY,
OpenMLDatasetID.MUL_ANONYM_VOLKERT,
OpenMLDatasetID.MUL_HOUSES_MELBOURNE_AIRBNB,
]

ALL_COST_DATASETS = UP_TO_10_FEAT + FROM_30_TO_50_FEAT + MORE_THAN_100_FEAT


def get_dataset_feature_group(dataset_name: str):
    if dataset_name in {d.name for d in UP_TO_10_FEAT}:
        return "Up to 10"
    elif dataset_name in {d.name for d in FROM_30_TO_50_FEAT}:
        return "30-50"
    elif dataset_name in {d.name for d in MORE_THAN_100_FEAT}:
        return "100+"
    else:
        raise ValueError(f"Dataset {dataset_name} not in any feature group.")